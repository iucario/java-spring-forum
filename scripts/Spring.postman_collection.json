{
  "info": {
    "_postman_id": "6224b8eb-a866-455e-a2cc-927dd86f98f0",
    "name": "Spring",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "index",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Body matches string\", function () {\r",
              "    pm.expect(pm.response.text()).to.include(\"Hello\");\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}",
          "host": [
            "{{host}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "user/register",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "});\r",
              "pm.test(\"Has keys\", function () {\r",
              "    pm.expect(pm.response.json()).to.have.keys('id', 'name', 'createdAt', 'totalPosts')\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"admin\",\r\n    \"password\": \"Password111!\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/user/register",
          "host": [
            "{{host}}"
          ],
          "path": [
            "user",
            "register"
          ]
        }
      },
      "response": [
        {
          "name": "user/register",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"admin\",\r\n    \"password\": \"Password111!\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/user/register",
              "host": [
                "{{host}}"
              ],
              "path": [
                "user",
                "register"
              ]
            }
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "/user/register"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 21 Oct 2022 11:36:10 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "body": "{\n    \"id\": 1,\n    \"name\": \"admin\",\n    \"createdAt\": 1666352170580,\n    \"totalPosts\": 0\n}"
        }
      ]
    },
    {
      "name": "user/register dup name",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 409\", function () {\r",
              "    pm.response.to.have.status(409);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"admin\",\r\n    \"password\": \"Password111!\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/user/register",
          "host": [
            "{{host}}"
          ],
          "path": [
            "user",
            "register"
          ]
        }
      },
      "response": [
        {
          "name": "user/register dup name",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"admin\",\r\n    \"password\": \"Password111!\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/user/register",
              "host": [
                "{{host}}"
              ],
              "path": [
                "user",
                "register"
              ]
            }
          },
          "status": "Conflict",
          "code": 409,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "19"
            },
            {
              "key": "Date",
              "value": "Thu, 20 Oct 2022 02:44:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "body": "{\"timestamp\":\"2022-10-21T10:49:28.871+00:00\",\"status\":409,\"error\":\"Conflict\",\"path\":\"/user/register\"}"
        }
      ]
    },
    {
      "name": "user/login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Keys: token\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.all.keys(\"token\");\r",
              "    pm.collectionVariables.set(\"token\", jsonData.token);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"admin\",\r\n    \"password\": \"Password111!\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/user/login",
          "host": [
            "{{host}}"
          ],
          "path": [
            "user",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "user/login wrong credential",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401 Unauthorized\", function () {\r",
              "    pm.response.to.have.status(401);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"admin\",\r\n    \"password\": \"wrongpass\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/user/login",
          "host": [
            "{{host}}"
          ],
          "path": [
            "user",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "user/me",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Have keys\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.all.keys('id', 'name', 'createdAt', 'totalPosts');\r",
              "    pm.collectionVariables.set(\"totalPosts\", jsonData.totalItem);\r",
              "    pm.collectionVariables.set('userId', jsonData.id);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}/user/me",
          "host": [
            "{{host}}"
          ],
          "path": [
            "user",
            "me"
          ]
        }
      },
      "response": []
    },
    {
      "name": "user/me without auth",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {\r",
              "    pm.response.to.have.status(401);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}/user/me",
          "host": [
            "{{host}}"
          ],
          "path": [
            "user",
            "me"
          ]
        }
      },
      "response": []
    },
    {
      "name": "user profile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Keys: id, name, createdAt, totalPosts\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.all.keys('id', 'name', 'createdAt', 'totalPosts');\r",
              "    pm.collectionVariables.set(\"totalPosts\", jsonData.totalItem);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}/user/profile/{{userId}}",
          "host": [
            "{{host}}"
          ],
          "path": [
            "user",
            "profile",
            "{{userId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "post  add",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Is a post\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.be.an('object')\r",
              "    pm.collectionVariables.set('postId', data.id)\r",
              "})\r",
              "pm.test(\"Have keys\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.have.all.keys('id', 'title', 'body', 'createdAt', 'updatedAt', 'userId', 'userName')\r",
              "})\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"title\": \"Hello World\",\r\n    \"body\": \"changed to public\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/api/post",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "post"
          ]
        }
      },
      "response": []
    },
    {
      "name": "post  add another",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Is a post\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.be.an('object')\r",
              "})\r",
              "pm.test(\"Have keys\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.have.all.keys('id', 'title', 'body', 'createdAt', 'updatedAt', 'userId', 'userName')\r",
              "})\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"title\": \"Hello World\",\r\n    \"body\": \"second post\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/api/post",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "post"
          ]
        }
      },
      "response": []
    },
    {
      "name": "post list",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Is array\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.be.an('array')\r",
              "})\r",
              "pm.test('Has 2 posts', () => {\r",
              "    pm.expect(pm.response.json().length).to.equal(2)\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}/api/post",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "post"
          ]
        }
      },
      "response": []
    },
    {
      "name": "post  update",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Is a object\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.be.an('object')\r",
              "})\r",
              "pm.test(\"Have keys\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.have.all.keys('id', 'title', 'body', 'createdAt', 'updatedAt', 'userId', 'userName')\r",
              "})\r",
              "pm.test(\"Time updated\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data.updatedAt).to.be.greaterThan(data.createdAt)\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"id\": 1,\r\n    \"body\": \"update post 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/api/post",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "post"
          ]
        }
      },
      "response": []
    },
    {
      "name": "post  delete post 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Body matches string\", function () {\r",
              "    pm.expect(pm.response.text()).to.include(\"Deleted\");\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{host}}/api/post/1",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "post",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "file upload",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Have keys\", function () {\r",
              "    var data = pm.response.json();\r",
              "    pm.expect(data).to.have.all.keys('url', 'name', 'createdAt', 'username');\r",
              "    pm.collectionVariables.set('filename', data.name)\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "Demo Diagram.png"
            }
          ]
        },
        "url": {
          "raw": "{{host}}/file/upload",
          "host": [
            "{{host}}"
          ],
          "path": [
            "file",
            "upload"
          ]
        }
      },
      "response": []
    },
    {
      "name": "file list",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Is array\", () => {\r",
              "    let data = pm.response.json()\r",
              "    pm.expect(data).to.be.an('array')\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}/file/list",
          "host": [
            "{{host}}"
          ],
          "path": [
            "file",
            "list"
          ]
        }
      },
      "response": []
    },
    {
      "name": "file get",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Content-Type is present\", function () {\r",
              "    pm.response.to.have.header(\"Content-Type\");\r",
              "});\r",
              "pm.test(\"Content-Type is octstream\", function () {\r",
              "    let type = pm.response.headers.filter(header => header.key === 'Content-Type')\r",
              "    pm.expect(type[0].value).to.equal(\"application/octet-stream\", type[0])\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}/file/filename/{{filename}}",
          "host": [
            "{{host}}"
          ],
          "path": [
            "file",
            "filename",
            "{{filename}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "file delete",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Body is correct\", function () {\r",
              "    pm.response.to.have.body(\"file deleted\");\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{host}}/file/delete/{{filename}}",
          "host": [
            "{{host}}"
          ],
          "path": [
            "file",
            "delete",
            "{{filename}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "comment add to post 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "});\r",
              "\r",
              "pm.test(\"Has keys\", () => {\r",
              "    const data = pm.response.json()\r",
              "    pm.expect(data).to.have.keys('id', 'body', 'postId', 'createdAt', 'updatedAt', 'username', 'userId')\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"postId\": 2,\r\n    \"body\": \"comment to post 2\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/api/comment",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "comment"
          ]
        }
      },
      "response": []
    },
    {
      "name": "comment get from post 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              "pm.test('Is list', () => {\r",
              "    const data = pm.response.json();\r",
              "    pm.expect(data).to.be.an('array')\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{host}}/api/comment?postId=2",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "comment"
          ],
          "query": [
            {
              "key": "postId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "comment update",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test('Comment body updated', () => {\r",
              "    const data = pm.response.json()\r",
              "    pm.expect(data.body).to.be.equal(\"comment updated\")\r",
              "})\r",
              "\r",
              "pm.test('Time updated', () => {\r",
              "    const data = pm.response.json()\r",
              "    pm.expect(data.updatedAt).to.be.greaterThan(data.createdAt)\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"id\": 1,\r\n    \"body\": \"comment updated\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/api/comment",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "comment"
          ]
        }
      },
      "response": []
    },
    {
      "name": "comment delete",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"itemId\": 1,\r\n    \"body\": \"comment to item 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/api/comment/1",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "comment",
            "1"
          ]
        }
      },
      "response": []
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "host",
      "value": "localhost:8080",
      "type": "default"
    },
    {
      "key": "token",
      "value": "",
      "type": "default"
    },
    {
      "key": "userId",
      "value": "1"
    },
    {
      "key": "totalPosts",
      "value": ""
    },
    {
      "key": "postId",
      "value": ""
    },
    {
      "key": "fileUrl",
      "value": ""
    },
    {
      "key": "filename",
      "value": ""
    }
  ]
}